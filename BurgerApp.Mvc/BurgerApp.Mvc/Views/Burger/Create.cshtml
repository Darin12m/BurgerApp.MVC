﻿@using BurgerApp.Services.Models.Burgers;
@model CreateBurgerModel;

@{
    ViewData["Title"] = "Create";
}

<h1>Create new Burger</h1>

@using (Html.BeginForm("Create", "Burger", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(model => model.Name)
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price)
        @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Price)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsVegeterian)
        @Html.CheckBoxFor(model => model.IsVegeterian, new { @class = "form-check-input" })
        @Html.ValidationMessageFor(model => model.IsVegeterian)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsVegan)
        @Html.CheckBoxFor(model => model.IsVegan, new { @class = "form-check-input" })
        @Html.ValidationMessageFor(model => model.IsVegan)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HasFries)
        @Html.CheckBoxFor(model => model.HasFries, new { @class = "form-check-input" })
        @Html.ValidationMessageFor(model => model.HasFries)
    </div>

    <form asp-controller="Burger" asp-action="Details" method="post">
        <button class="btn btn-primary">Create</button>
    </form>
    <p>
        <a asp-action="Index">Back to List</a>
    </p>
}